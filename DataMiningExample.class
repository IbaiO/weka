// Source code is decompiled from a .class file using FernFlower decompiler.
import java.io.FileNotFoundException;
import java.io.IOException;
import java.util.Random;
import weka.attributeSelection.BestFirst;
import weka.attributeSelection.CfsSubsetEval;
import weka.classifiers.Evaluation;
import weka.classifiers.bayes.NaiveBayes;
import weka.core.Instances;
import weka.core.converters.ConverterUtils;
import weka.filters.Filter;
import weka.filters.supervised.attribute.AttributeSelection;

public class DataMiningExample {
   public DataMiningExample() {
   }

   public static void main(String[] var0) throws Exception {
      ConverterUtils.DataSource var1 = null;

      try {
         var1 = new ConverterUtils.DataSource("/home/ibai/Deskargak/heart-c.arff");
      } catch (FileNotFoundException var25) {
         System.out.println("ERROR: Revisar path del fichero de datos:" + var0[0]);
      }

      Instances var2 = null;

      try {
         var2 = var1.getDataSet();
      } catch (IOException var24) {
         System.out.println("ERROR: Revisar contenido del fichero de datos: " + var0[0]);
      }

      if (var2.classIndex() == -1) {
         var2.setClassIndex(var2.numAttributes() - 1);
      }

      AttributeSelection var3 = new AttributeSelection();
      CfsSubsetEval var4 = new CfsSubsetEval();
      BestFirst var5 = new BestFirst();
      var3.setEvaluator(var4);
      var3.setSearch(var5);
      var3.setInputFormat(var2);
      Instances var6 = Filter.useFilter(var2, var3);
      NaiveBayes var7 = new NaiveBayes();
      Evaluation var8 = new Evaluation(var6);
      var8.crossValidateModel(var7, var6, 10, new Random(1L));
      double var9 = var8.pctCorrect();
      double var11 = var8.pctIncorrect();
      double var13 = var8.kappa();
      double var15 = var8.meanAbsoluteError();
      double var17 = var8.rootMeanSquaredError();
      double var19 = var8.relativeAbsoluteError();
      double var21 = var8.rootRelativeSquaredError();
      double[][] var23 = var8.confusionMatrix();
      System.out.println("Correctly Classified Instances  " + var9);
      System.out.println("Incorrectly Classified Instances  " + var11);
      System.out.println("Kappa statistic  " + var13);
      System.out.println("Mean absolute error  " + var15);
      System.out.println("Root mean squared error  " + var17);
      System.out.println("Relative absolute error  " + var19);
      System.out.println("Root relative squared error  " + var21);
   }
}
